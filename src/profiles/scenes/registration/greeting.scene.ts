import { Markup } from 'telegraf';
import { UseFilters } from '@nestjs/common';
import { Scene, SceneEnter, Action, On } from 'nestjs-telegraf';
import { TelegrafExceptionFilter } from 'src/common/filters/telegraf-exception.filter';
import { Context } from 'src/interfaces/context.interface';
import { SCENE_SETTINGS } from 'src/common/config/scene';

@Scene('reg_greeting', SCENE_SETTINGS)
@UseFilters(TelegrafExceptionFilter)
export class RegistrationGreetingScene {
  @SceneEnter()
  async onSceneEnter(ctx: Context) {
    ctx.replyWithHTML(
      `üëã –ü—Ä–∏–≤—ñ—Ç, <b>${ctx.from.first_name}</b>. \n\n–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –∑–Ω–∞–π—Ç–∏ <b>‚ù§Ô∏è –ø–∞—Ä—É</b> –∞–±–æ –ø—Ä–æ—Å—Ç–æ <b>üéâ –¥—Ä—É–∑—ñ–≤</b>. \n–î–ª—è —Ü—å–æ–≥–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ <b>–¥–µ–∫—ñ–ª—å–∫–∞ –∑–∞–ø–∏—Ç–∞–Ω—å, –æ–∫–µ–π?</b>`,
      Markup.inlineKeyboard([[{ text: '–¢–∞–∫ üëç', callback_data: 'okay' }]]),
    );
  }

  @Action('okay')
  async onOkayAction(ctx: Context) {
    ctx.answerCbQuery();

    ctx.scene.enter('reg_age');
  }

  @On('message')
  async onMessage(ctx: Context) {
    ctx.scene.reenter();
  }
}
