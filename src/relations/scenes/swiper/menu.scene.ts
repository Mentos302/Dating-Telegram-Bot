import { Scene, SceneEnter, On, Action } from 'nestjs-telegraf';
import { Context } from 'src/interfaces/context.interface';
import { ProfilesService } from 'src/profiles/profiles.service';
import { RelationsService } from 'src/relations/relations.service';
import { Markup } from 'telegraf';

@Scene('swiper_menu')
export class SwiperMenuScene {
  constructor(
    private readonly profilesService: ProfilesService,
    private readonly relationsService: RelationsService,
  ) {}

  @SceneEnter()
  async onSceneEnter(ctx: Context) {
    ctx.replyWithHTML(
      `üìù  <b>–ú—ñ–π</b> –ø—Ä–æ—Ñ—ñ–ª—å\nüôÖ‚Äç‚ôÇÔ∏è  <b>–Ø –±—ñ–ª—å—à–µ –Ω–µ —Ö–æ—á—É</b> –Ω—ñ–∫–æ–≥–æ —à—É–∫–∞—Ç–∏\nüöÄ  <b>–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏</b> –ø–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ—Ñ—ñ–ª—ñ–≤\n\n<i>–û–±–∏—Ä–∞–π:</i>`,
      Markup.inlineKeyboard([
        [
          { text: 'üìù –ú—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å', callback_data: 'profile' },
          { text: 'üôÖ‚Äç‚ôÇÔ∏è –ë—ñ–ª—å—à–µ –Ω–µ —à—É–∫–∞—é', callback_data: 'close' },
        ],
        [
          {
            text: 'üöÄ –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ—Ñ—ñ–ª—ñ–≤',
            callback_data: 'continue',
          },
        ],
      ]),
    );
  }

  @Action('continue')
  async onContinueAction(ctx: Context) {
    ctx.answerCbQuery();

    ctx.scene.enter('swiper_main', { is_first: true });
  }

  @Action('profile')
  async onProfileAction(ctx: Context) {
    ctx.answerCbQuery();

    ctx.scene.enter('account_menu');
  }

  @Action('close')
  async onCloseAction(ctx: Context) {
    ctx.answerCbQuery();

    ctx.replyWithHTML(
      `üö® <b>–¢–∞–∫ —Ç–∏ –Ω–µ –∑–Ω–∞—Ç–∏–º–µ—à, —â–æ –∫–æ–º—É—Å—å —Å–ø–æ–¥–æ–±–∞–≤—Å—è —Ç–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å</b>.\n\n<i>–¢–æ—á–Ω–æ —Ö–æ—á–µ—à –≤—ñ–¥–∫–ª—é—á–∏—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å?</i>`,
      Markup.inlineKeyboard([
        { text: '‚úñÔ∏è –¢–∞–∫', callback_data: 'close_confirm' },
        { text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'go_back' },
      ]),
    );
  }

  @Action('go_back')
  async onGoBack(ctx: Context) {
    ctx.answerCbQuery();

    ctx.scene.enter('swiper_menu');
  }

  @Action('close_confirm')
  async onCloseConfirmAction(ctx: Context) {
    await this.profilesService.delete(ctx.from.id);
    await this.relationsService.delete(ctx.from.id);

    ctx.answerCbQuery();

    ctx.replyWithHTML(
      `üëã –ù–∞–¥—ñ—é—Å—å —è –¥–æ–ø–æ–º—ñ–≥ —Ç–æ–±—ñ –∑–Ω–∞–π—Ç–∏ –∫–æ–≥–æ—Å—å, <b>—Ä–∞–¥–∏–π –±—É–≤ –∑ —Ç–æ–±–æ—é –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å.</b>\n\n–ë—É–¥–µ —Å–∫—É—á–Ω–æ - –ø–∏—à–∏, –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –∑–Ω–∞–π–¥–µ–º–æ –∫–æ–≥–æ—Å—å!`,
      Markup.inlineKeyboard([
        { text: '–®—É–∫–∞—Ç–∏ –∑–Ω–æ–≤—É ‚ò∫Ô∏è', callback_data: 'regagain' },
      ]),
    );

    ctx.scene.leave();
  }

  @On('message')
  async onMessage(ctx: Context) {
    ctx.scene.reenter();
  }
}
